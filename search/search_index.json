{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Deepracer wiki","text":""},{"location":"#documentation-links","title":"\ud83d\udcc4 Documentation links:","text":"<ul> <li>Racetrack Creation</li> <li>Include Racetrack in a CARLA Map</li> <li>Create DeepRacer</li> <li>Import Deepracer to Carla</li> </ul>"},{"location":"createdeepracerinblender/","title":"How to create DeepRacer 3D Model","text":"<p>This video summarizes this webpage (Spanish dub):</p> <p>Get the Deepracer stl files</p> <p>First of all you need to get the car files, which can be found in the git repository:</p> <p>   GitHub - aws-deepracer/aws-deepracer </p> <p>To make it easier, here is the .stl file of the Deepracer chassis:</p> <p>   Deepracer chassis </p> <p>And here is the wheel .stl file:</p> <p>   Deepracer wheel </p> <p>Download both of them.</p> <p>Install Blender add-on:</p> <p>Go to this webpage and download the add-on:</p> <p>   Blender add-on </p> <p>Now open Blender and go to Edit\u2192Preferences. </p> <p>Then open de Add-ons section and click the Install button.</p> <p>Search for the zip file you have just downloaded and click on Install Add-on from File.</p> <p>Check if it is installed correctly by pressing N or by clicking on the tiny arrow located at the top right.:</p> <p></p> <p>Then a new window will pop up, you will find an Unreal Engine 4 Vehicle label:</p> <p></p> <p>If so, then the add-on will have been installed correctly.</p> <p>Now import the chassis and wheels meshes. Just click on File\u2192Import and select the type of file your meshes are (.stl).</p> <p></p> <p>Now, we are going to adjust chassis and wheels size to the actual size of the real life ones and then build up the car:</p> <p></p> <p>To do so, make sure you are using object mode:</p> <p>(Top left of the screen).</p> <p></p> <p>If not, change it using tab key.</p> <p>Click on the imported wheel and copy it other 3 times.</p> <p>Now use the editor to transform, locate and rotate the wheels and chassis so that they are displayed together like in the above image. You can either use this editor to do so:</p> <p></p> <p>Or use the R key to rotate manually, the S key to scale it manually, or this icon on the left to move the object:</p> <p></p> <p>It is really important to face the X axis positively:</p> <p></p> <p>Once it is done, it is time to use the add-on we have just installed before.</p> <p>Display the UE4 Vehicle label as mentioned before :</p> <p></p> <p>You have to fill those 5 void labels with the corresponding chassis and 4 wheels. You can either click on the gray  icon located on the right of each label and then manually click on each mesh or just click inside and select the corresponding mesh:  </p> <p></p> <p>(Do not worry about the mesh names now, you will have to change them later).</p> <p>Now click on Set Unit Scale  at the bottom of the UE4 Vehicle display window:</p> <p></p> <p>Then click on Rig Vehicle:</p> <p></p> <p>You will see that bones have just appeared. Each one in a different mesh.</p> <p>You can resize them in the bone length label. However resizing them does not affect the functionality, it is just for clearer visualization:</p> <p></p> <p>You will find your files in your collection, distributed in a similar way to this one:</p> <p></p> <p>Now it is the time to change some names, the only important ones are the bone ones and de vehicle base, they have to be named exactly the same as the names on the picture from above. If not, Unreal Engine will not recognize them in some further steps. Although bone names and vehicle base are the only important ones, I recommend using the same names that I am using for the rest of the meshes. Just double left click on each object or bone to change its name.</p> <p>Once all of the above is done, this scenario must be exported into a .fbx file ( the kind of file Unreal Engine handles).</p> <p>To do so, click on File\u2192Export\u2192FBX</p> <p></p> <p>Now, few things have to be done in this new window. Make sure to uncheck or select as in here:</p> <p></p> <p></p> <p>So that only armature and mesh are exported, axes are correctly set, as so the geometry.</p> <p>A new fbx file will be created.</p> <p>This video explains the whole process (apart from other configurations that won\u2019t be needed now) much better:</p>"},{"location":"importdeepracercarla/","title":"How to Import the DeepRacer in CARLA","text":"<p>Youtube videos</p> <p>These videos summarize this webpage:</p>"},{"location":"importdeepracercarla/#english","title":"English","text":""},{"location":"importdeepracercarla/#espanol","title":"Espa\u00f1ol","text":""},{"location":"importdeepracercarla/#_1","title":"\u4e2d\u6587","text":"<p>Importing into unreal engine</p> <p>First of all, find the deepracer.fbx file you just exported from blender or just take this model:</p> <p>   Fbx model link </p> <p>Now, run:</p> <pre><code>make launch\n</code></pre> <p>in the carla root directory.</p> <p>Once Unreal Engine is open, navigate to:</p> <p>Carla\u2192Static\u2192Vehicles(or Cars/4Wheeled)</p> <p>Crate a new directory and name it: Deepracer. Navigate to this new directory  and click on the the green add/import button on the left. Click on Import to /Game/Carla/static\u2026.  Then select the .fbx file of the Deepracer.</p> <p>We will be using default settings, so just click on import in the window that just appeared.</p>"},{"location":"importdeepracercarla/#setting-the-physics-asset","title":"Setting the physics asset","text":"<p>You will now have 3 files in your content browser directory, the  mesh, the skeleton and the physics asset. Double click on the physics  asset to open it.</p> <p>Click on options on the Skeleton tree window. Click on show all.</p> <p>First, select the Vehicle_Base. In the\u00a0<code>Details</code>\u00a0menu on the right, change the\u00a0<code>Linear Damping</code>\u00a0to 0.0 in the\u00a0<code>Physics</code>\u00a0section. Check\u00a0<code>Simulation Generates Hit Events</code>\u00a0in the\u00a0<code>Collision</code>\u00a0section and change the\u00a0<code>Primitive Type</code>\u00a0from\u00a0<code>Capsule</code>\u00a0to\u00a0<code>Box</code>\u00a0in the\u00a0<code>Body Creation</code>\u00a0section. Then press\u00a0<code>Regenerate bodies</code>. The capsule will now change to a rectangular box. </p> <p></p> <p>Then select all the wheels in the Skeleton Tree window(Options and select Show all bones) . Click each wheel bone while pressing  Ctrl key to select them all. Then change the Primitive type in the body creation window to sphere. Then generate bodies.</p> <p>Make sure that 4 spheres have been created, one for each wheel.</p> <p>For the wheels, change\u00a0<code>Linear Damping</code>\u00a0to 0.0, set\u00a0<code>Physics Type</code>\u00a0to\u00a0<code>Kinematic</code>, and set\u00a0<code>Collision Response</code>\u00a0to\u00a0<code>Disabled</code>. Press\u00a0<code>Re-generate Bodies</code>\u00a0once more.</p> <p></p> <p>Do not forget to save your changes: </p> <p></p>"},{"location":"importdeepracercarla/#creating-the-animation","title":"Creating the animation","text":"<p>In the content browser directory where you have your new vehicle assets, right click and choose\u00a0<code>Animation &gt; Animation Blueprint</code>. In the popup that opens, search for\u00a0<code>VehicleAnimInstance</code>\u00a0in the\u00a0<code>Parent Class</code>\u00a0section and for the\u00a0<code>Target Skeleton</code>\u00a0search  for the skeleton corresponding to the deepracer, you should be able  to see the name in your content browser. After selecting these two  things press OK. This will create a new animation blueprint for your  vehicle.</p> <p>Rename it as <code>AnimBP_Deepracer</code></p> <p>To simplify things, we can copy the animation from another vehicle rather than building each block by ourselves.</p> <p>In a second content browser(Window\u2192Content Browser\u2192Content Bowser 2), open\u00a0<code>Content &gt; Carla &gt; Static &gt; Vehicles(or Cars) &gt; 4Wheeled</code>\u00a0and choose any vehicle(For example the Audia A2). </p> <p>Open the animation blueprint of your chosen vehicle and then copy all nodes that are not the\u00a0<code>Output pose</code>\u00a0node from this blueprint,</p> <p>to the new animation blueprint you have just crated in the Deepracer directory.(Ctrl+V in the Deepracer Animation Blueprint)</p> <p>Connect the nodes by dragging a new connection between the final node and the output node. </p> <p>Press compile and the animation blueprint is now set. Do not forget to save it all.</p>"},{"location":"importdeepracercarla/#creating-the-car-blueprint","title":"Creating the car blueprint","text":"<p>This blueprint will be the file Carla will be using when loading the car in Unreal.</p> <p>Navigate with your content browser into\u00a0<code>Content &gt; Carla &gt; Blueprints &gt; Vehicles</code> and create a new directory, name it Deepracer.</p> <p>Navigate with your content browser into\u00a0<code>Content &gt; Carla &gt; Blueprints &gt; Vehicles &gt; AudiA2</code>\u00a0or  a similar vehicle. In here you will find a set of blueprints set up for  the 4 wheels. Copy these into the directory containing your own vehicle(<code>Content &gt; Carla &gt; Blueprints &gt; Vehicles &gt; Deepracer</code>)   and rename them to ensure you can distinguish them later. Do it this way for each wheel: </p> <p>from BP_Lincoln_FLW to BP_Deepracer_FLW</p> <p>from BP_Lincoln_FRW to BP_Deepracer_FRW</p> <p>from BP_Lincoln_RLW to BP_Deepracer_RLW</p> <p>from BP_Lincoln_RRW to BP_Deepracer_RRW</p> <p>Open and change these settings on each of those four Blueprints:</p> <ul> <li>Change the mesh in Collision mesh (in Shape) to <code>Wheel_Shape</code>.</li> <li>Set shape radius to 3.75 and shape width to 4.0 (make sure to measure it in Blender) .The Z offset should be 0. Mass is 0.04 kg</li> <li>In the <code>Tire Config</code> section of the blueprint, use the <code>CommonTireConfig</code>.</li> <li>Compile and save the blueprint.</li> <li><code>Affected by handbrake</code> should be checked for both rear wheels(in RLW and RRW Blueprints).<code>Steer angle</code> should be set to the maximum intended steer angle(30) for both front wheels and set to zero for both rear wheels.</li> <li> <p>It is REALLY IMPORTANT to make sure that CommonTireConfig tires  are used, before continuing to the next step, double check for each wheel blueprint that this tire is set. If not, and the tire is not defined, much later, Unreal will crash and shut down without an apparent reason. This is why!!!</p> </li> <li> <p>For the suspension values, both front wheels must have these settings: </p> </li> <li>Suspension force offset: 0.0</li> <li>Suspension max raise: 0.1</li> <li>Suspension max drop: 0.1</li> <li>Suspension natural frecuency: 25.0</li> <li>Suspension damping ratio: 1.0</li> <li>Both rear wheels must have these settings: </li> <li>Suspension force offset: 0.0</li> <li>Suspension max raise: 1.5</li> <li>Suspension max drop: 2.0</li> <li>Suspension natural frecuency: 25.0</li> <li>Suspension damping ratio: 1.0</li> </ul> <p>Right click in the content browser directory (where your deepracer wheels blueprints are) and chose\u00a0<code>Blueprint Class</code>. Search in the\u00a0<code>All Classes</code>\u00a0menu for\u00a0<code>BaseVehiclePawn</code>\u00a0and choose this class. Name the blueprint as \u201cBP_Deepracer\u201d and open it. </p> <p>Select\u00a0<code>Mesh</code>\u00a0in the\u00a0<code>Components</code>\u00a0tab on the left and then click on the vehicle mesh(search for the deepracer mesh) into the Mesh section on the right hand side.</p> <p>In\u00a0<code>Anim Class</code>\u00a0search for the animation corresponding to the deepracer that you set up in the previous step.</p> <p>This next step is REALLY IMPORTANT, as it is not explained in any website tutorial and it is fundamental.</p> <p>Type \u201ccenter\u201d in the Search Details browser and search for Center of Mass Offset. Change it to x=0.0, y=0.0 and z=-0.1, if not, the center mass will be below the ground and the car will be unable to move properly, as a massive \u201cForce\u201d will be pulling the Deepracer down. That z = -0.1 allows us to control the car much easier, as the center off mass is lowered a tiny bit and closer to the ground, the deepracer will be more stabilized. </p> <p>Next, select\u00a0<code>Vehicle Movement</code>\u00a0in the\u00a0<code>Components</code>\u00a0menu of the blueprint class and in the right\u00a0<code>Details</code>\u00a0menu navigate to the\u00a0<code>Vehicle Setup</code>\u00a0section. </p> <p>Change the vehicle mass to 1.23 kg.</p> <p>Now in Wheel Setups, for each wheel class, find the wheel blueprint that you previously copied and renamed for the\u00a0<code>Wheel Class</code>\u00a0attribute.Make sure that each wheel class name corresponds to the bone name. For example :</p> <p>In wheel setups, open 0, in Wheel Class, select BP_Deepracer_FLW as it corresponds to the bone named as Wheel_Front_Left.</p> <p>Do the same for each wheel (1, 2 and 3 in Wheel Setups). </p> <p></p> <p>Now search for Mechanical Setup-&gt;Transimssion Setup. Uncheck Automatic transmission, set gear switch time to 0.5, final ratio to 4.0.  In the Gear Setup settings, delete all gears except for one: Gear 1 and set that Gear1 Gear Ratio to 2.0 and the ReverseGearRatio to -4.0. Clutch strength has to be 10. Compile and save.</p> <p></p> <p>Last step is setting up the link to this blueprint. </p> <p>Now navigate to <code>Content &gt; Carla &gt; Blueprints &gt; Vehicles &gt; VehicleFactory</code> and double click this to open the Vehicle Factory.</p> <p>Select the <code>Vehicles</code> node and expand the <code>Vehicles</code> item in the <code>Default value</code> section on the right hand side.</p> <p></p> <p>Press the plus icon to add your new vehicle. Scroll down to the last entry and expand it, it should be empty. Name the make as  \u201cDeepracer\u201dand model as \u201cAWS_Deepracer\u201d .</p> <p>In the class section find your blueprint class that you created in the previous step(BP_Deepracer).</p> <p>Leave the number of wheels as 4 and put the generation as 0. Compile and save. </p> <p>Carla looks for this <code>VehicleFactory</code> file that has the \u201clinks\u201d to all car configurations. What we are doing in here is adding a way for Carla to \u201cknow\u201d that there is a vehicle called Deepracer and where its configurations are.</p> <p>Do a global save for safety and you are now ready to run your vehicle in a simulation. !!!</p> <p>Press play in the unreal toolbar to run the simulation:</p> <p></p> <p>Once it is running, to check if it worked. This script spawns the deepracer on x=0,y=0,z=0.5 ,lets you operate the vehicle using WASD keys:</p> <p>   Script Link </p> <pre><code>python3 manualcontrol.py\n</code></pre> <p>If anything went wrong, make sure that you followed every step correctly. </p> <p>If Unreal crashes, it means that there is something missing and Unreal cannot load something that does not even exist. Such as the tires configuration or wheel blueprints that are not correctly called from the car blueprint.</p> <p>These are all files needed for this process (no need to be all in the same place):</p> <p></p> <p>Here is a video of the Deepracer once all these steps have been done:</p>"},{"location":"includeracetrackcarla/","title":"How to manually include the Racetrack in any CARLA map","text":"<p>CARLA requires map geometry information in <code>.fbx</code> format and OpenDRIVE information in <code>.xodr</code> format.</p> <p>There are several ways to import your map into CARLA. However, we will not need to create the whole map from scratch. We will be using an already made map and just adding the track mesh on top of its surface.</p> <p>You will actually use an already created map with its own assets, objects and other configurations. And just add the meshes of the road we have just created. You can take this racetrack fbx:</p> <p>   Fbx link </p> <p>Open Carla:</p> <pre><code>cd carla\nmake launch\n</code></pre> <p>In the Content Browser of the editor, navigate to <code>Content/Carla/Maps/BaseMap</code> and duplicate the map by right clicking on it and duplicating it, the, rename it to (.e.g)  RaceTrack.</p> <p></p> <p>Create a new folder with the name of your map package in the <code>Content/Carla/Maps</code> directory and save the duplicated map there.(e.g /RaceTrack).</p> <p>In the Content Browser of the Unreal Engine editor, navigate to that folder you have just created. Right click in the grey area and select <code>Import to /Game/Carla/Maps...</code> under the heading Import Asset.</p> <p></p> <p>In the configuration window that pops up, make sure:</p> <p>These options are unchecked:</p> <ul> <li>Auto Generate Collision</li> <li>Combine Meshes</li> <li>Force Front xAxis</li> </ul> <p>In the following drop downs, the corresponding options are selected:</p> <ul> <li>Normal Import Method -Import Normals</li> <li>Material Import Method - Create New Materials</li> </ul> <p>These options are checked:</p> <ul> <li>Convert Scene Unit</li> <li>Import Textures</li> </ul> <p></p> <p>If the Import textures box cannot be checked,  just with \u201cCreate New Materials\u201d will be alright.</p> <p>Click <code>Import</code>.</p> <p>The racetrack meshes will appear in the Content Browser. Select the meshes and drag them into the scene. Before that, make sure you have an appropriate ground to display the racetrack on. You can drag into the scene any  static mesh that can work as a suitable ground.</p> <p>Now it will look like this:</p> <p></p> <p>Scale and resize the meshes wherever you want using the Transform menu on the right sidebar:</p> <p></p> <p>Make sure to move the whole racetrack 0.01 up in Z axis so that it becomes visible.</p> <p>Instead of BaseMap you can either choose other map and delete everything on it that is not really necessary such as trees, barriers, bushes, wires, signals\u2026 and then drag the racetrack inside</p> <p></p>"},{"location":"racetrackcreation/","title":"How to Create the Racetrack","text":"<p>You will need to have Blender installed in your device, I use the 4.3.2 version (we are on February 2025).</p> <p>blender.org</p> <p>Now follow the steps from this repository.</p> <p>(Notice there are both Windows and Linux implementations, only follow the Linux steps)</p> <p>   GitHub - johschmitz/blender-driving-scenario-creator </p> <p>To check if it is installed correctly and use this add-on in the correct way, just open Blender, press N or click the little left arrow next to the navigation gizmo(Top right) to toggle the sidebar. </p> <p></p> <p>Click View, set <code>Clip Start</code> to 1 m and <code>Clip End</code> to 10000 m to avoid some 3D viewport clipping issues since the Blender default setting is targeted more towards smaller models. </p> <p>Click the Shading dropdown button (the little down arrow in the top right corner of the 3D viewport)</p> <p></p> <p>And select <code>Texture</code> to be able to directly see the road sign textures.</p> <p></p> <p>Open the Driving Scenario Creator Sidebar:</p> <p></p> <p>Now it will be really easy to define the whole track, just click on whether you\u2019d prefer to include in the track, either a straight road track, arc or clothoid\u2026</p> <p>Click on each one to be able to adjust their parameters:</p> <p></p> <p>Whenever you are selecting anything, just click ESC to \u2018free your mouse\u2019 from that mode, and you will be able to select a different one.</p> <p>You will notice how all different road tracks align once you are displaying them and the mouse itself will be placed on the center of the next track piece.</p> <p>Once you have your whole track done, for example:</p> <p></p> <p>Just click on Export driving Scenario, below the whole sidebar:</p> <p></p> <p>Now select the .fbx extension and export it in any directory you want.</p> <p></p> <p>This will generate these folders:</p> <p></p> <p>Notice that for Carla you will need the .fbx and the .xodr file. The .fbx file is located in /models/static_scene</p> <p>And the .xodr file is in the /xodr folder</p> <p>You can even check the OPENDrive file online to ensure it was created successfully:</p> <p>Online OpenDRIVE Viewer</p>"}]}